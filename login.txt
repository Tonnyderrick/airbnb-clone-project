<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Login - Bursary System</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <div style="height: 6px; width: 100%; display: flex;">
    <div style="flex: 1; background-color: #000;"></div>
    <div style="flex: 1; background-color: #bb0a1e;"></div>
    <div style="flex: 1; background-color: #006600;"></div>
    <div style="flex: 1; background-color: #fff;"></div>
  </div>
  
  <h1 class="page-title">MyScholar KE</h1>
  <div class="form-container">
    <h2>Login </h2>
    <form action="login_action.php" method="POST">
      <label for="email">Email</label>
      <input type="email" id="email" name="email" required placeholder="Enter your email" />

      <label for="password">Password</label>
      <input type="password" id="password" name="password" required placeholder="Enter your password" />

      <button type="submit">Login</button>
      <p style="text-align: center; margin-top: 10px;">
        Don't have an account? <a href="signup.html">Sign up here</a>
      </p>
      
    </form>
  </div>
  <footer class="footer">
    <p>&copy; 2025 MyScholar KE. Empowering Education Across Kenya.</p>
    <div class="footer-links">
      <a href="about.html">About Us</a>
      <a href="contact.html">Contact</a>
      <a href="privacy.html">Privacy Policy</a>
    </div>
  </footer>
  
  
</body>
</html>
style="height: 6px; width: 100%; display: flex;"




from flask import Flask, render_template, request, redirect, url_for, flash
import sqlite3
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = 'your_secret_key'

# Initialize the SQLite database
def init_db():
    with sqlite3.connect("users.db") as conn:
        conn.execute('''
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                email TEXT UNIQUE NOT NULL,
                password TEXT NOT NULL
            )
        ''')
init_db()

# Home route
@app.route('/')
def home():
    return render_template('index.html')

# About Us route
@app.route('/about')
def about():
    return render_template('about.html')

# Contact Us route
@app.route('/contact', methods=['GET', 'POST'])
def contact():
    if request.method == 'POST':
        # Handle contact form submission
        name = request.form['name']
        email = request.form['email']
        message = request.form['message']
        
        # You could process this message, save to database, or send an email here.
        flash('Thank you for reaching out. We will get back to you soon!', 'success')
        return redirect(url_for('contact'))
    
    return render_template('contact.html')

# Privacy Policy route
@app.route('/privacy')
def privacy():
    return render_template('privacy.html')

# Signup route
@app.route('/signup', methods=['GET', 'POST'])
def signup():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']
        confirm_password = request.form['confirm_password']
        
        # Check if the passwords match
        if password != confirm_password:
            flash('Passwords do not match. Please try again.', 'danger')
            return render_template('signup.html')

        # Hash the password
        hashed_password = generate_password_hash(password)

        # Check if the email already exists in the database
        conn = sqlite3.connect("users.db")
        cur = conn.cursor()
        cur.execute("SELECT * FROM users WHERE email = ?", (email,))
        user = cur.fetchone()
        
        if user:
            flash('Email already exists. Please login or use another email.', 'danger')
            return render_template('signup.html')
        
        # Insert the new user into the database
        try:
            with sqlite3.connect("users.db") as conn:
                conn.execute("INSERT INTO users (email, password) VALUES (?, ?)", (email, hashed_password))
            flash("Signup successful! Please log in.", 'success')
            return redirect(url_for('login'))
        except sqlite3.IntegrityError:
            flash("An error occurred. Please try again later.", 'danger')
    
    return render_template('signup.html')

# Login route
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']
        conn = sqlite3.connect("users.db")
        cur = conn.cursor()
        cur.execute("SELECT * FROM users WHERE email = ?", (email,))
        user = cur.fetchone()
        conn.close()
        if user and check_password_hash(user[2], password):
            return redirect(url_for('dashboard'))
        else:
            flash('Invalid login credentials')
    return render_template('login.html')

# Dashboard route (to be created after login)
@app.route('/dashboard')
def dashboard():
    return render_template('dashboard.html')

if __name__ == '__main__':
    app.run(debug=True)

index

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home - Bursary System</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
</head>
<body>

    <!-- Top Bar -->
    <div style="height: 6px; width: 100%; display: flex;">
        <div style="flex: 1; background-color: #000;"></div>
        <div style="flex: 1; background-color: #bb0a1e;"></div>
        <div style="flex: 1; background-color: #006600;"></div>
        <div style="flex: 1; background-color: #fff;"></div>
    </div>

    <!-- Main Content -->
    <div class="container">
        <h1>Welcome to MyScholar KE</h1>
        <p>Empowering education across Kenya.</p>
        <a href="{{ url_for('signup') }}" class="btn btn-primary">Sign Up</a>
        <a href="{{ url_for('login') }}" class="btn btn-secondary">Login</a>
    </div>

    <!-- Footer -->
    <footer>
        <p>&copy; 2025 MyScholar KE. Empowering Education Across Kenya.</p>
    </footer>

</body>
</html>

